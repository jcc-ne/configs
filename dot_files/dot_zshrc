# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
source $HOME/.bashrc

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# -- set ZSH_THEME="" to load only custom/themes
ZSH_THEME=""  

# manually load themes
source $ZSH/custom/themes/switch_themes.zsh

function load_p10k
{
  unset -m 'GEOMETRY_*'
  configs=($ZSH/custom/themes/p10k_configs/*zsh)
  N=${#configs[@]}
  ((N=(RANDOM%N)+1))
  RANDOM_CONFIG=${configs[$N]}
  source "$RANDOM_CONFIG"
  echo "盛powerlevel10k   config"
  echo "    ... $RANDOM_CONFIG    "
  echo ""
  export P10K_CONFIG="$RANDOM_CONFIG"
}

function theme_add2fav
{
  THEME_NAME=$(basename $THEME)
  cd $ZSH/custom/themes
  ln -sv ../../themes/$THEME_NAME $ZSH/custom/themes/
  cd -
}

function theme_rm_from_fav
{
  rm -v $ZSH/custom/themes/$THEME
}

function theme_fav
{
  themes=()
  # themes=($ZSH/custom/themes/*zsh-theme)
  # themes+=$ZSH/custom/themes/geometry/geometry.zsh-theme
  for ((i = 0; i < 3; i++)); do  # -- powerleve has 3 themes
      themes+=$ZSH/custom/themes/powerlevel10k/powerlevel10k.zsh-theme
  done
  N=${#themes[@]}
  ((N=(RANDOM%N)+1))
  RANDOM_THEME=${themes[$N]}
  export THEME="$RANDOM_THEME"
  source "$RANDOM_THEME"
  if [[ "$RANDOM_THEME" == "$ZSH/custom/themes/powerlevel10k/powerlevel10k.zsh-theme" ]];then
      load_p10k
  else
      echo "[oh-my-zsh] my fav random theme '$RANDOM_THEME' loaded..."
  fi 
}

GEOMETRY_PROMPT_PLUGINS=(docker_machine exec_time git virtualenv anaconda)

# Example aliases
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias dm="docker-machine"
alias k="kubectl"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to disable command auto-correction.
# DISABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(z git git-extras tmux osx emotty docker docker-compose docker-machine aws taskwarrior history macports web-search themes kubectl helm)

source $ZSH/oh-my-zsh.sh

# source ~/.zpreztorc

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
else
  export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
#
# export LC_ALL=en_US.utf8
# export LANG=en_US.utf8
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad
export TERM="xterm-256color"

# bindkeys to vi
bindkey -v
bindkey -M vicmd 'k' history-beginning-search-backward
bindkey -M vicmd 'j' history-beginning-search-forward
bindkey -M viins 'kj' vi-cmd-mode
bindkey '\e[A' history-beginning-search-backward
bindkey '\e[B' history-beginning-search-forward

alias -g l='|less'
alias -g m='|more'
alias ll='ls -lth |less'
alias ls='ls -F'
alias tadd='t add project:none'
# export KEYTIMEOUT=1

# alias rvm-prompt=$HOME/.rvm/bin/rvm-prompt
# [[ -s "$HOME/.rvm/scripts/rvm" ]] &amp; &amp; source "$HOME/.rvm/scripts/rvm"

# function zle-line-init zle-keymap-select {
#   VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]% %{$reset_color%}"
#   RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
#   zle reset-prompt
# }

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/janine/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/janine/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/janine/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/janine/google-cloud-sdk/completion.zsh.inc'; fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# -- load fav theme (make sure this block is below source ohmyzsh)

if [[ "$ZSH_THEME" == "" ]]; then
   theme_fav
   # load_p10k
fi


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

unset ZLE_RPROMPT_INDENT

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('$HOME/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
    # eval "$__conda_setup"
# else
    # if [ -f "$HOME/anaconda3/etc/profile.d/conda.sh" ]; then
        # . "$HOME/anaconda3/etc/profile.d/conda.sh"
    # else
        # export PATH="$HOME/anaconda3/bin:$PATH"
    # fi
# fi
# if [[ $HOST == 'blackbox' ]]; then
    # source activate tf
# fi
# unset __conda_setup
# <<< conda initialize <<<
#
. ~/.zsh_hashd

alias taskh="export TASKRC=$HOME/.taskrc_home && export TASKWIKI_ROOT=$HOME/.task_home/wiki"
alias taskw="export TASKRC=$HOME/.taskrc && export TASKWIKI_ROOT=$HOME/.task/wiki"

# -- set vim colorscheme and bg light/dark
alias vimsolarizedlight="tmux setenv VIMCOLORSCHEME solarized && tmux setenv VIMBG light && export VIMCOLORSCHEME=solarized && export VIMBG=light"
alias vimsolarizeddark="tmux setenv VIMCOLORSCHEME solarized && tmux setenv VIMBG dark && export VIMCOLORSCHEME=solarized && export  VIMBG=dark"
alias vimgruvboxlight="tmux setenv VIMCOLORSCHEME gruvbox && tmux setenv VIMBG light && export VIMCOLORSCHEME=gruvbox && export VIMBG=light"
alias vimgruvboxdark="tmux setenv VIMCOLORSCHEME gruvbox && tmux setenv VIMBG dark && export VIMCOLORSCHEME=gruvbox && export  VIMBG=dark"
alias vimcoloschemeunset='tmux setenv VIMCOLORSCHEME "" && tmux setenv VIMBG "" && unset VIMCOLORSCHEME && unset VIMBG'
alias vimbglight="tmux setenv VIMBG light && export VIMBG=light"
alias vimbgdark="tmux setenv VIMBG dark && export VIMBG=dark"

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if [ -d "${PYENV_ROOT}" ]; then
    export PATH=${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}
    eval "$(pyenv init -)"
fi
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# export PYTHON_CONFIGURE_OPTS="--enable-framework"

alias issue="gh --repo $ISSUE_REPO issue"
alias openissue="gh --repo $ISSUE_REPO issue create --project WD"
export PATH="/usr/local/opt/ruby/bin:$PATH"
alias gittree="git log --all --graph --decorate --pretty=format:'%Cgreen%h %Cblue %<(12) %an %Cred %d %Creset %gs %<(80,trunc) %s'"

